"""
Django settings for Whatsapp project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
from celery.schedules import crontab



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-psn$i)hqc)+an#9mkyfw4e2zcu7)sobj2l$nx5@5=oa)aoe_o0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
ALLOWED_HOSTS = ["wa.binfosys.solutions", "www.wa.binfosys.solutions", "10.11.12.83", "127.0.0.1"]
# CORS_ALLOWED_ORIGINS = [
#    "wa.binfosys.solutions", "www.wa.binfosys.solutions", "10.11.12.83", "127.0.0.1"
# ]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'web', 
    'Api',
    'django_celery_results',
    'celery',
    'django_celery_beat',
    'corsheaders',
    'channels',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'Whatsapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Whatsapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'WhatsApp_copy2',
#         'USER': 'postgres',
#         'PASSWORD': 'almighty',
#         'HOST': 'localhost',
#         'PORT': '5432'
#     }
# }




DATABASES = {
    'default': dj_database_url.config(
        default='postgres://postgres:almighty@localhost:5432/Whatsapp',
        conn_max_age=600  # This keeps connections open for better performance
    )
}










# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]


MEDIA_URL = '/media/'  # URL to access media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# Directory to store Chrome user profiles (make sure that works for everyone)
CHROME_USER_DATA_PATH = os.path.join(BASE_DIR, 'chrome_profiles')

# REST_FRAMEWORK = {
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
#     'PAGE_SIZE': 10
# }





os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'proj.settings')



# # Celery Settings


CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'

CELERY_BROKER_URL = 'sqla+postgresql://postgres:almighty@localhost:5432/Whatsapp'
CELERY_RESULT_BACKEND = 'db+postgresql://postgres:almighty@localhost:5432/Whatsapp'

CELERY_TRACK_STARTED = True
CELERY_TASK_ALWAYS_EAGER = False 

CELERY_BROKER_CONNECTION_RETRY = True
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True


CELERY_BEAT_SCHEDULE = {
    'sample_task': {
        'task': 'Whatsapp.tasks.sample_task',
        'schedule': crontab(minute='*/1'),  # Run every 1 minute
    },
}
CELERY_TIMEZONE = 'UTC'

#start your  queue sever 

# celery -A Whatsapp worker --loglevel=info


CSRF_TRUSTED_ORIGINS = ['https://wa.binfosys.solutions', 'https://www.wa.binfosys.solutions']



ASGI_APPLICATION = "Bulk.asgi.application"

# Redis channel layer
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [("localhost", 6379)],
        },
    },
    }
